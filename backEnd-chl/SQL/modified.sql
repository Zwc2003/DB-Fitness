--DROP TABLE "ManagePost","Comment","Publish","Posts", "Messages","Payment","Book","Participate","Advise","Teaches","ManagerUser","Update", "Manager","Trainee","Coach","Course", "CourseType","User";
--上面的语句无法直接运行，使用下面这个可以，单个删除一个表可以用上面的格式，记得最后加分号
BEGIN
  -- 逐个删除表，按依赖关系从子表到父表的顺序进行
  EXECUTE IMMEDIATE 'DROP TABLE "ManagePost" CASCADE CONSTRAINTS';  
  EXECUTE IMMEDIATE 'DROP TABLE "Comment" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Publish" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Posts" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Messages" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Payment" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Book" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Participate" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Advise" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Teaches" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "ManagerUser" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Update" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Manager" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Trainee" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Coach" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "Course" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "CourseType" CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE "User" CASCADE CONSTRAINTS';
END;
/

CREATE TABLE "Coach" (
    "coachID" NUMBER,
    "userName" NVARCHAR2(20),
    "Age" NUMBER(3),
    "Gender" VARCHAR2(10),
    "iconURL" VARCHAR2(100),
    "isMember" NUMBER(1),
    "coachName" NVARCHAR2(10),
    CONSTRAINT "PK_Coach" PRIMARY KEY ("coachID"),
    CONSTRAINT "FK_Coach_User" FOREIGN KEY ("coachID") REFERENCES "User" ("userID")
);

CREATE TABLE "Trainee" (
    "traineeID" NUMBER,
    "userName" NVARCHAR2(20),
    "Age" NUMBER(3),
    "Gender" VARCHAR2(10),
    "iconURL" VARCHAR2(100),
    "traineeName" NVARCHAR2(10),
    "goalType" NVARCHAR2(10),
    "Duration" INTERVAL DAY TO SECOND,
    "goalWeight" NUMBER(3, 1),
    CONSTRAINT "PK_Trainee" PRIMARY KEY ("traineeID"),
    CONSTRAINT "FK_Trainee_User" FOREIGN KEY ("traineeID") REFERENCES "User" ("userID")
);

CREATE TABLE "Update" (
    "coachID" NUMBER,
    "classID" NUMBER,
    "actionType" NVARCHAR2(20),
    "updateTime" TIMESTAMP,
    "updateContext"  NVARCHAR2(20),
    CONSTRAINT "PK_Update" PRIMARY KEY ("coachID", "classID"),
    CONSTRAINT "FK_Update_Coach" FOREIGN KEY ("coachID") REFERENCES "Coach" ("coachID"),
    CONSTRAINT "FK_Update_Course" FOREIGN KEY ("classID") REFERENCES "Course" ("classID")
);

CREATE TABLE "ManagerUser" (
    "adminID" NUMBER,
    "userID" NUMBER,
    "Reason" NVARCHAR2(50),
    "Time" TIMESTAMP,
    CONSTRAINT "PK_ManagerUser" PRIMARY KEY ("adminID", "userID"),
    CONSTRAINT "FK_ManagerUser_Manager" FOREIGN KEY ("adminID") REFERENCES "Manager" ("managerID"),
    CONSTRAINT "FK_ManagerUser_User" FOREIGN KEY ("userID") REFERENCES "User" ("userID")
);

CREATE TABLE "Teaches" (
    "coachID" NUMBER,
    "classID" NUMBER,
    "typeID" NUMBER,
    CONSTRAINT "PK_Teaches" PRIMARY KEY ("coachID", "classID"),
    CONSTRAINT "FK_Teaches_Coach" FOREIGN KEY ("coachID") REFERENCES "Coach" ("coachID"),
    CONSTRAINT "FK_Teaches_Course" FOREIGN KEY ("classID") REFERENCES "Course" ("classID"),
    CONSTRAINT "FK_Teaches_CourseType" FOREIGN KEY ("typeID") REFERENCES "CourseType" ("typeID")
);

CREATE TABLE "Advise" (
    "coachID" NUMBER,
    "traineeID" NUMBER,
    CONSTRAINT "PK_Advise" PRIMARY KEY ("coachID", "traineeID"),
    CONSTRAINT "FK_Advise_Coach" FOREIGN KEY ("coachID") REFERENCES "Coach" ("coachID"),
    CONSTRAINT "FK_Advise_Trainee" FOREIGN KEY ("traineeID") REFERENCES "Trainee" ("traineeID")
);

CREATE TABLE "Participate" (
    "traineeID" NUMBER,
    "classID" NUMBER,
    "typeID" NUMBER,
    "Grade" NUMBER(2),
    "Evaluate" NVARCHAR2(200),
    CONSTRAINT "PK_Participate" PRIMARY KEY ("traineeID", "classID"),
    CONSTRAINT "FK_Participate_Trainee" FOREIGN KEY ("traineeID") REFERENCES "Trainee" ("traineeID"),
    CONSTRAINT "FK_Participate_Course" FOREIGN KEY ("classID") REFERENCES "Course" ("classID"),
    CONSTRAINT "FK_Participate_CourseType" FOREIGN KEY ("typeID") REFERENCES "CourseType" ("typeID")
);

CREATE TABLE "Book" (
    "bookID" NUMBER GENERATED BY DEFAULT AS IDENTITY,
    "classID" NUMBER,
    "traineeID" NUMBER,
    "payMethod" CHAR(20),
    "bookStatus" NUMBER(1) DEFAULT 0,
    "bookTime" TIMESTAMP,
    CONSTRAINT "PK_Book" PRIMARY KEY ("bookID"),
    CONSTRAINT "FK_Book_Course" FOREIGN KEY ("classID") REFERENCES "Course" ("classID"),
    CONSTRAINT "FK_Book_Trainee" FOREIGN KEY ("traineeID") REFERENCES "Trainee" ("traineeID")
);

CREATE TABLE "Payment" (
    "paymentID" NUMBER GENERATED BY DEFAULT AS IDENTITY,
    "bookID" NUMBER,
    "Amount" NUMBER(10),
    "payMethod" CHAR(3),
    "paymentStatus" NUMBER(3) DEFAULT 0,
    "payTime" TIMESTAMP,
    CONSTRAINT "PK_Payment" PRIMARY KEY ("paymentID"),
    CONSTRAINT "FK_Payment_Book" FOREIGN KEY ("bookID") REFERENCES "Book" ("bookID")
);

CREATE TABLE "Messages" (
    "messageID" NUMBER GENERATED BY DEFAULT AS IDENTITY,
    "senderID" NUMBER,
    "receiverID" NUMBER,
    "messageType" NVARCHAR2(10),
    "Content" NVARCHAR2(200),
    "sendTime" TIMESTAMP,
    CONSTRAINT "PK_Messages" PRIMARY KEY ("messageID"),
    CONSTRAINT "FK_Messages_Sender" FOREIGN KEY ("senderID") REFERENCES "User" ("userID"),
    CONSTRAINT "FK_Messages_Receiver" FOREIGN KEY ("receiverID") REFERENCES "User" ("userID")
);

CREATE TABLE "Posts" (
    "postID"  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    "userID" NUMBER,
    "postTitle" NVARCHAR2(20),
    "postContent" NVARCHAR2(500),
    "postCategory" NVARCHAR2(20),  
    "postTime" TIMESTAMP,
    "likesCount" NUMBER(10),
    "forwardCount" NUMBER(10),
    "commentsCount" NUMBER(10),
    CONSTRAINT "PK_Posts" PRIMARY KEY ("postID"),
    CONSTRAINT "FK_Posts_User" FOREIGN KEY ("userID") REFERENCES "User" ("userID")
);

CREATE TABLE "Publish" (
    "userID" NUMBER,
    "postID" NUMBER,
    "publishTime" TIMESTAMP,
    CONSTRAINT "PK_Publish" PRIMARY KEY ("userID", "postID"),
    CONSTRAINT "FK_Publish_User" FOREIGN KEY ("userID") REFERENCES "User" ("userID"),
    CONSTRAINT "FK_Publish_Post" FOREIGN KEY ("postID") REFERENCES "Posts" ("postID")
);

CREATE TABLE "Comment" (
    "commentID" NUMBER GENERATED BY DEFAULT AS IDENTITY,
    "userID" NUMBER NOT NULL,
    "postID" NUMBER NOT NULL,
    "parentCommentID" NUMBER DEFAULT NULL,
    "commentTime" TIMESTAMP,
    "likesCount" NUMBER(10),
    "Content" NVARCHAR2(200),
    CONSTRAINT "PK_Comment" PRIMARY KEY ("commentID"),
    CONSTRAINT "FK_Comment_User" FOREIGN KEY ("userID") REFERENCES "User" ("userID"),
    CONSTRAINT "FK_Comment_Post" FOREIGN KEY ("postID") REFERENCES "Posts" ("postID"),
    CONSTRAINT "FK_Comment_ParentComment" FOREIGN KEY ("parentCommentID") REFERENCES "Comment" ("commentID")
);

CREATE TABLE "ManagePost" (
    "adminID" NUMBER,
    "postID" NUMBER,
    "manageTime" TIMESTAMP,
    "deleteStatus" NUMBER(1),
    "promoteStatus" NUMBER(1),
    "restrictStatus" NUMBER(1),
    CONSTRAINT "PK_ManagePost" PRIMARY KEY ("adminID", "postID"),
    CONSTRAINT "FK_ManagePost_Admin" FOREIGN KEY ("adminID") REFERENCES "Manager" ("managerID"),
    CONSTRAINT "FK_ManagePost_Post" FOREIGN KEY ("postID") REFERENCES "Posts" ("postID")
);

